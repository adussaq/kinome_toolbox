!function(s){"use strict";var t=function(){var s=function(s,t,e){this.distance=s,this.linkage=t,this.threshold=void 0==e?1/0:e};return s.prototype={cluster:function(s,t,e){this.clusters=[],this.dists=[],this.mins=[],this.index=[];for(l=0;l<s.length;l++){var i={value:s[l],key:l,index:l,size:1};this.clusters[l]=i,this.index[l]=i,this.dists[l]=[],this.mins[l]=0}for(l=0;l<this.clusters.length;l++)for(var h=0;h<=l;h++){var r=l==h?1/0:this.distance(this.clusters[l].value,this.clusters[h].value);this.dists[l][h]=r,this.dists[h][l]=r,r<this.dists[l][this.mins[l]]&&(this.mins[l]=h)}for(var n=this.mergeClosest(),l=0;n;)e&&l++%t==0&&e(this.clusters),n=this.mergeClosest();var a=JSON.parse(JSON.stringify(this.dists));return this.clusters.forEach(function(s){s.the_dists=a,delete s.index}),this.clusters},mergeClosest:function(){for(var s=0,t=1/0,e=0;e<this.clusters.length;e++){var i=this.clusters[e].key;(l=this.dists[i][this.mins[i]])<t&&(s=i,t=l)}if(t>=this.threshold)return!1;var h=this.index[s],r=this.index[this.mins[s]],n={left:h,right:r,key:h.key,size:h.size+r.size,node_distance:t};this.clusters[h.index]=n,this.clusters.splice(r.index,1),this.index[h.key]=n;for(e=0;e<this.clusters.length;e++){var l,a=this.clusters[e];h.key==a.key?l=1/0:"single"==this.linkage?(l=this.dists[h.key][a.key],this.dists[h.key][a.key]>this.dists[r.key][a.key]&&(l=this.dists[r.key][a.key])):"complete"==this.linkage?(l=this.dists[h.key][a.key],this.dists[h.key][a.key]<this.dists[r.key][a.key]&&(l=this.dists[r.key][a.key])):l="average"==this.linkage?(this.dists[h.key][a.key]*h.size+this.dists[r.key][a.key]*r.size)/(h.size+r.size):this.distance(a.value,h.value),this.dists[h.key][a.key]=this.dists[a.key][h.key]=l}for(e=0;e<this.clusters.length;e++){var d=this.clusters[e].key;if(this.mins[d]==h.key||this.mins[d]==r.key){for(var t=d,u=0;u<this.clusters.length;u++){var c=this.clusters[u].key;this.dists[d][c]<this.dists[d][t]&&(t=c)}this.mins[d]=t}this.clusters[e].index=e}return delete h.index,delete r.index,!0}},t=function(t,i,h,r,n,l){i=i||"euclidean",h=h||"average","string"==typeof i&&(i=e[i]);var a=new s(i,h,r).cluster(t,n,l);return void 0===r?a[0]:a}}(),e={euclidean:function(s,t){for(var e=0,i=0;i<s.length;i++)e+=Math.pow(t[i]-s[i],2);return Math.sqrt(e)},manhattan:function(s,t){for(var e=0,i=0;i<s.length;i++)e+=Math.abs(t[i]-s[i]);return e},max:function(s,t){for(var e=0,i=0;i<s.length;i++)e=Math.max(e,Math.abs(t[i]-s[i]));return e}};s.hcluster=t}(KINOME);