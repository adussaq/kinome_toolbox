!function(exports){"use strict";exports.enrich=function(OBJECT){var get,list,define_lists,append,level_up,eval_equation,clone,stringify,ID="_id",cycle_list,cycle_object,peptide_list,peptide_object,exposure_list,exposure_object,level_1_helpers,level_2_helpers,copy,mult1,blank_array,ret_full_pep_list,define_peptide_list,verify_get_input,array_level_helpers,name_helpers,addSuperMeta;return level_1_helpers=function(){var e,t,r,l;get=function(l){var n,i,o,p,s,a,c,u,y=[],d=this;for(p=(l=verify_get_input(l)).peptides,a=l.exposures,s=l.cycles,n=0;n<p.length;n+=1)for(i=0;i<s.length;i+=1)for(o=0;o<a.length;o+=1)c=cycle_object[s[i]][a[o]],u=peptide_object[p[n]].index,void 0!==c&&void 0!==u&&y.push(addSuperMeta({peptide:p[n],cycle:s[i],exposure:a[o],signal:d.signal[c][u],signal_valid:d.signal_valid[c][u],background:d.background[c][u],background_valid:d.background_valid[c][u],spot_row:1*peptide_object[p[n]].row,spot_col:1*peptide_object[p[n]].col,image:r(c,d),set:e(c,u,d),more:t(c,peptide_object[p[n]])},d));return y},t=function(e,t){return function(){return{peptide:copy(t),image_index:e}}},r=function(e,t){var r;for(r=0;r<t.run_data.length;r+=1)if(t.run_data[r].key.match(/image/i))return t.run_data[r].value[e]},append=function(e){var t,r,n,i,o,p,s,a,c=this;if(l(e)){if(t=e.value,r=e.valid,n=e.type,i=e.peptide,p=e.cycle,o=e.exposure,o=null===o?"Cycle Slope":o,p=null===p?"Post Wash":p,1!==(a=c.get({peptide:i,cycle:p,exposure:o})).length){for(c.signal.push(blank_array(c[n][0].length)),c.signal_valid.push(blank_array(c[n][0].length)),c.background.push(blank_array(c[n][0].length)),c.background_valid.push(blank_array(c[n][0].length)),c.cycles.push("string"==typeof p?null:p),c.exposures.push("string"==typeof o?null:o),s=0;s<c.run_data.length;s+=1)Array.isArray(c.run_data[s].value)&&c.run_data[s].value.length===c.cycles.length-1&&c.run_data[s].value.push(void 0);define_lists(c),a=c.get({peptide:i,cycle:p,exposure:o})}return a[0].set(n,t),a[0].set(n+"_valid",r),!0}return console.error("Failed to set, one or more parameters were missing or invalid."),!1},l=function(e){var t=!1;return e&&e.hasOwnProperty("value")&&e.hasOwnProperty("valid")&&e.hasOwnProperty("type")&&e.hasOwnProperty("peptide")&&e.hasOwnProperty("cycle")&&e.hasOwnProperty("exposure")&&(e.value*=1,e.valid*=1,e.cycle=null===e.cycle?null:"Post Wash"===e.cycle?null:1*e.cycle,e.exposure=null===e.exposure?null:"Cycle Slope"===e.exposure?null:1*e.exposure,isNaN(e.value)||isNaN(e.valid)||isNaN(e.cycle)||isNaN(e.exposure)||"string"!=typeof e.type||"string"!=typeof e.peptide||peptide_object.hasOwnProperty(e.peptide)&&e.type.match(/background|signal/)&&(t=!0)),t},e=function(e,t,r){return function(l,n){var i=this;l.match(/^(signal|background)(_valid)*$/)&&(r[l][e][t]=n,i[l]=n)}},list=function(e){var t;return"string"!=typeof(e=e||"")&&(e="",console.warn("list should only be passed a string")),e.match(/peptide/i)?(t=copy(peptide_list),t.more=ret_full_pep_list,t):e.match(/exposure/i)?copy(exposure_list):e.match(/cycle/i)?copy(cycle_list):(t={peptides:copy(peptide_list),exposures:copy(exposure_list),cycles:copy(cycle_list)},t.peptides.more=ret_full_pep_list,t)},define_lists=function(e){var t,r,l;for(cycle_list=[],cycle_object={},exposure_list=[],exposure_object={},peptide_list=[],peptide_object={},define_peptide_list(e),t=0;t<e.cycles.length;t+=1)null===(r=e.cycles[t])&&(r="Post Wash"),null===(l=e.exposures[t])&&(l="Cycle Slope"),cycle_object[r]=cycle_object[r]||[],cycle_object[r][l]=t,exposure_object[l]=1;cycle_list=Object.keys(cycle_object).map(mult1),exposure_list=Object.keys(exposure_object).map(mult1)},level_up=function(e){var t,r,l,n=this;for(l=(r=JSON.parse(n.stringify())).cycles.length,delete r.cycles,delete r.exposures,delete r.background,delete r.background_valid,delete r.signal,delete r.signal_valid,delete r._id,"string"!=typeof e&&console.error("No equation string passed in, please pass in a string with the needed parts. Example: https://github.com/adussaq/kinome_toolbox/blob/master/models/cyclingEq_3p_hyperbolic.jseq"),r.linear={signal:[],background:[],cycles:[]},r.kinetic={signal:[],background:[],exposures:[],equation_string:e},r.level=r.level.replace(/^1/,"2"),console.warn("delete this part once updated the data struct"),t=0;t<r.run_data.length;t+=1)if(r.run_data[t].key.match(/^cycle$/i)){l=r.run_data[t].value.length;break}for(t=0;t<r.run_data.length;t+=1)r.run_data[t].value.length===l&&(r.run_data.splice(t,1),t-=1);for(t=0;t<r.sample_data.length;t+=1)r.sample_data[t].value.length===l&&(r.sample_data.splice(t,1),t-=1);return exports.enrich(r)}},level_2_helpers=function(){var set_function,check_apppend_params,more_function,type_list=["kinetic","linear"];append=function(e){var t,r,l,n,i,o,p,s=this;return check_apppend_params(e)?(t=e.value,r=e.peptide,n=e.cycle,l=e.exposure,o=e.type,p=e.signal_type,1!==(i=s.get({peptide:r,type:o,cycle:n,exposure:l})).length&&("kinetic"===o?(s.kinetic.signal.push(blank_array(s.peptides.length)),s.kinetic.background.push(blank_array(s.peptides.length)),s.kinetic.exposures.push("string"==typeof l?null:l)):"linear"===o&&(s.linear.signal.push(blank_array(s.peptides.length)),s.linear.background.push(blank_array(s.peptides.length)),s.linear.cycles.push("string"==typeof n?null:n)),define_lists(s),i=s.get({peptide:r,type:o,cycle:n,exposure:l})),i[0].set(p,t),!0):(console.error("Failed to set, one or more parameters were missing or invalid."),!1)},set_function=function(e,t,r,l){return function(n,i){var o=this;"string"==typeof n&&(n=n.toLowerCase()).match(/^signal$|^background$/)?(l[e][n][t][r]=i,o[n]=i):console.error("failed to set, key invalid")}},more_function=function(e,t){return function(){return{peptide:copy(t),fit_index:e}}},get=function(e){var t,r,l,n,i,o,p,s,a,c,u,y,d,_,f=this,g={},h=[];for(t=(e=verify_get_input(e)).peptides,l=e.exposures,r=e.cycles,"string"==typeof(n=e.hasOwnProperty("type")?e.type:e.hasOwnProperty("types")?e.types:type_list)&&n.match(/kinetic|linear/i)?n=[n.toLowerCase()]:Array.isArray(n)&&n.map(function(e,t){return n[t]=n[t].toLowerCase(),e.match(/kinetic|linear/)?1:0}).reduce(function(e,t){return e*t})||(n=type_list),i=0;i<n.length;i+=1)for("kinetic"===n[i]?(s=l,c=exposure_object,a="exposure",u="cycle",y=r):(s=r,c=cycle_object,a="cycle",u="exposure",y=l),o=0;o<s.length;o+=1)for(p=0;p<t.length;p+=1)d=c[s[o]],_=peptide_object[t[p]].index,(g={peptide:t[p],type:n[i],signal:f[n[i]].signal[d][_],background:f[n[i]].background[d][_],spot_row:1*peptide_object[t[p]].row,spot_col:1*peptide_object[t[p]].col,set:set_function(n[i],d,_,f),more:more_function(d,peptide_object[t[p]])})[a]=s[o],g[u]=copy(y),g=addSuperMeta(g,f),h.push(g);return h},define_lists=function(e){var t,r,l;for(cycle_list=[],cycle_object={},exposure_list=[],exposure_object={},peptide_list=[],peptide_object={},define_peptide_list(e),t=0;t<e.linear.cycles.length;t+=1)null===(r=e.linear.cycles[t])&&(r="Post Wash"),cycle_object[r]=t;for(t=0;t<e.kinetic.exposures.length;t+=1)null===(l=e.kinetic.exposures[t])&&(l="Cycle Slope"),exposure_object[l]=t;cycle_list=Object.keys(cycle_object).map(mult1),exposure_list=Object.keys(exposure_object).map(mult1)},check_apppend_params=function(e){var t,r,l=!1;return e=e||{},e.exposure=null===e.exposure?"Cycle Slope":e.exposure,e.cycle=null===e.cycle?"Post Wash":e.cycle,e.hasOwnProperty("signal")&&!e.hasOwnProperty("background")?(t=e.signal,r="signal"):!e.hasOwnProperty("signal")&&e.hasOwnProperty("background")&&(t=e.background,r="background"),r&&"string"==typeof e.type&&e.type.match(/^linear$|^kinetic$/)&&"string"==typeof e.peptide&&peptide_object.hasOwnProperty(e.peptide)&&("linear"!==e.type||"number"!=typeof e.cycle&&"Post Wash"!==e.cycle?"number"!=typeof e.exposure&&"Cycle Slope"!==e.exposure||(l=!0):l=!0),e.signal_type=r,e.value=t,l},eval_equation=function(obj){var nl_equation={};return!obj.kinetic.equation&&obj.kinetic.equation_string&&(eval("nl_equation = "+obj.kinetic.equation_string),obj.kinetic.equation=nl_equation),obj.linear.equation=obj.linear.equation||{description:"For fitting linear data",displayEq:function(e){return"y(e)="+e[0].toFixed(2)+"·e+"+e[1].toFixed(2)},func:function(e,t){return e[0]*t[0]+t[1]},mathParams:["m","b"],mathType:"y(e)=m·e+b",name:"linear",stringified:"y(e) = m · e + b"},obj},list=function(e){var t;return"string"!=typeof(e=e||"")&&(e="",console.warn("list should only be passed a string")),e.match(/peptide/i)?(t=copy(peptide_list),t.more=ret_full_pep_list,t):e.match(/exposure/i)?copy(exposure_list):e.match(/cycle/i)?copy(cycle_list):e.match(/type/i)?copy(type_list):(t={peptides:copy(peptide_list),exposures:copy(exposure_list),cycles:copy(cycle_list),types:copy(type_list)},t.peptides.more=ret_full_pep_list,t)}},addSuperMeta=function(e,t){var r;return void 0!==t.group&&(e.group=t.group),t.level.match(/^2/)&&"object"==typeof location&&location.href&&(r=t.data_origin_url)&&(r=(r=r.replace(/\/*\?[\s\S]*$/,"").replace(/\/lvl_2/,"/lvl_1"))+'?find={"name_id":"'+t.name_id+'"}',r="./?data=*["+encodeURIComponent(r)+"]*",e.lvl_1=r),e.name=t.name,e.level=t.level,e},array_level_helpers=function(){var e,t,r;r=function(e,t){var r,l={};for(r=0;r<e.length;r+=1)l[e[r]]=1;for(r=0;r<t.length;r+=1)l[t[r]]=1;return Object.keys(l)},define_lists=function(e){var l,n,i,o={},p={},s={},a={};t={},e.map(function(e){for(n=e.list(),i=Object.keys(n),l=0;l<i.length;l+=1)t.hasOwnProperty(i[l])?r(t[i[l]],n[i[l]]):t[i[l]]=n[i[l]];o[e.group]=1,p[e.name]=1,s[e.name_id]=1,a[e.level]=1}),t.cycles=t.cycles.map(mult1),t.exposures=t.exposures.map(mult1),t.groups=Object.keys(o).map(mult1),t.names=Object.keys(p),t.ids=Object.keys(s),t.levels=Object.keys(a)},get=function(t){var r,l=this,n=[];for(t=e(t),r=0;r<l.length;r+=1)l[r].name.match(t.names)&&l[r].group.toString().match(t.groups)&&l[r].level.match(t.levels)&&l[r].name_id.match(t.ids)&&(n=t.get_samples?n.concat(l[r]):n.concat(l[r].get(t)));return n},list=function(e){"string"!=typeof(e=e||"")&&(e="",console.warn("list should only be passed a string"));var r,l=Object.keys(t);for(r=0;r<l.length;r+=1)if(e.match(new RegExp(l[r],"i"))||l[r].match(new RegExp(e,"i")))return copy(t[l[r]]);return copy(t)},e=function(e){var r,l,n,i,o;return e=e||{},r=e.hasOwnProperty("groups")?e.groups:e.hasOwnProperty("group")?e.group:t.groups,Array.isArray(r)||(r=[r]),r=new RegExp("^"+r.join("$|^")+"$","i"),l=e.hasOwnProperty("names")?e.names:e.hasOwnProperty("name")?e.name:t.names,Array.isArray(l)||(l=[l]),l=new RegExp("^"+l.join("$|^")+"$","i"),n=e.hasOwnProperty("ids")?e.ids:e.hasOwnProperty("id")?e.id:t.ids,Array.isArray(n)||(n=[n]),n=new RegExp("^"+n.join("$|^")+"$","i"),i=e.hasOwnProperty("levels")?e.levels:e.hasOwnProperty("level")?e.level:t.levels,Array.isArray(i)||(i=[i]),i=new RegExp("^"+i.join("$|^")+"$","i"),o=copy(e),delete o.level,delete o.group,delete o.id,delete o.name,o.levels=i,o.groups=r,o.ids=n,o.names=l,o}},name_helpers=function(){var e;get=function(t){var r,l,n,i,o,p,s,a,c=[],u=this;for(i=(t=verify_get_input(t)).peptides,p=t.exposures,o=t.cycles,r=0;r<i.length;r+=1)for(l=0;l<o.length;l+=1)for(n=0;n<p.length;n+=1)s=cycle_object[o[l]][p[n]],a=peptide_object[i[r]].index,void 0!==s&&void 0!==a&&c.push({peptide:i[r],cycle:o[l],exposure:p[n],spot_row:1*peptide_object[i[r]].row,spot_col:1*peptide_object[i[r]].col,image:e(s,u)});return c},e=function(e,t){var r;for(r=0;r<t.run_data.length;r+=1)if(t.run_data[r].key.match(/image/i))return t.run_data[r].value[e]},list=function(e){var t;return"string"!=typeof(e=e||"")&&(e="",console.warn("list should only be passed a string")),e.match(/peptide/i)?(t=copy(peptide_list),t.more=ret_full_pep_list,t):e.match(/exposure/i)?copy(exposure_list):e.match(/cycle/i)?copy(cycle_list):(t={peptides:copy(peptide_list),exposures:copy(exposure_list),cycles:copy(cycle_list)},t.peptides.more=ret_full_pep_list,t)},define_lists=function(e){var t,r,l;for(cycle_list=[],cycle_object={},exposure_list=[],exposure_object={},peptide_list=[],peptide_object={},define_peptide_list(e),t=0;t<e.cycles.length;t+=1)null===(r=e.cycles[t])&&(r="Post Wash"),null===(l=e.exposures[t])&&(l="Cycle Slope"),cycle_object[r]=cycle_object[r]||[],cycle_object[r][l]=t,exposure_object[l]=1;cycle_list=Object.keys(cycle_object).map(mult1),exposure_list=Object.keys(exposure_object).map(mult1)}},ret_full_pep_list=function(){var e,t,r,l,n,i,o=[],p=this;for(e=0;e<p.length;e+=1){for(i=0,r=copy(peptide_object[p[e]].full),t=0;i<2&&t<r.length;t+=1)r[t].key.match(/spotRow/i)?(l=parseInt(r[t].value,10),i+=1):r[t].key.match(/spotCol/i)&&(n=parseInt(r[t].value,10),i+=1);Object.defineProperty(r,"pos",{value:{spot_row:l,spot_col:n},enumerable:!1}),Object.defineProperty(r,"name",{value:p[e],enumerable:!1}),o.push(r)}return o},verify_get_input=function(e){var t,r,l,n,i;if(e=e||{},t=e.hasOwnProperty("peptides")?e.peptides:e.hasOwnProperty("peptide")?e.peptide:peptide_list,r=e.hasOwnProperty("cycles")?e.cycles:e.hasOwnProperty("cycle")?e.cycle:void 0,l=e.hasOwnProperty("exposures")?e.exposures:e.hasOwnProperty("exposure")?e.exposure:void 0,void 0===r)for(r=copy(cycle_list),n=0;n<r.length;n+=1)"Post Wash"===r[n]&&(r.splice(n,1),n-=1);if(void 0===l)for(l=copy(exposure_list),n=0;n<l.length;n+=1)"Cycle Slope"===l[n]&&(l.splice(n,1),n-=1);for(t=Array.isArray(t)?t:[t],r=Array.isArray(r)?r:[r],l=Array.isArray(l)?l:[l],n=0;n<t.length;n+=1)peptide_object.hasOwnProperty(t[n])||t.splice(n,1);for(n=0;n<r.length;n+=1)cycle_object.hasOwnProperty(r[n])||r.splice(n,1);for(n=0;n<l.length;n+=1)exposure_object.hasOwnProperty(l[n])||l.splice(n,1);return i=copy(e),i.cycles=r,i.exposures=l,i.peptides=t,delete i.cycle,delete i.exposure,delete i.peptide,i},blank_array=function(e){var t,r=[];for(t=0;t<e;t+=1)r.push(void 0);return r},define_peptide_list=function(e){var t,r,l,n,i,o;for(t=0;t<e.peptides.length;t+=1){for(r=0;r<e.peptides[t].length;r+=1)"ID"===e.peptides[t][r].key&&(n=r),"spotRow"===e.peptides[t][r].key&&(l=r),"spotCol"===e.peptides[t][r].key&&(i=r);if("#REF"!==(o=e.peptides[t][n].value)){for(;peptide_object.hasOwnProperty(o);)o+="_2";peptide_list.push(o),peptide_object[o]={name:e.peptides[t][n].value,row:e.peptides[t][l].value,col:e.peptides[t][i].value,index:t,full:e.peptides[t]}}}},copy=function(e){return JSON.parse(JSON.stringify(e))},clone=function(){var e,t,r,l,n,i=this;for(e=copy(i),t=Object.getOwnPropertyNames(i),r=Object.getOwnPropertyNames(e),l=0;l<t.length;l+=1)for(n=0;n<r.length;n+=1)if(t[l]===r[n]){t.splice(l,1),r.splice(n,1),l-=1;break}for(l=0;l<t.length;l+=1)"function"!=typeof i[t[l]]&&Object.defineProperty(e,t[l],{enumerable:!1,configurable:!1,writable:!1,value:i[t[l]]});return delete e._id,exports.enrich(e)},mult1=function(e){return"string"==typeof e&&e.match(/Post\ Wash|Cycle\ Slope/i)?e:1*e},stringify=function(){var e=this.clone();delete e._id;for(var t,r,l,n=[e];n.length>0;)for(r=n.shift(),t=Object.keys(r),l=0;l<t.length;l+=1)"object"==typeof r[t[l]]&&null!==r[t[l]]?n.push(r[t[l]]):r[t[l]]&&"number"==typeof r[t[l]]&&(r[t[l]]=1*r[t[l]].toPrecision(6));return JSON.stringify(e)},Array.isArray(OBJECT)&&OBJECT.length>0?(OBJECT=OBJECT.map(function(e){return exports.enrich(e)}),array_level_helpers(),Object.defineProperty(OBJECT,"clone",{value:clone,enumerable:!1}),Object.defineProperty(OBJECT,"stringify",{value:stringify,enumerable:!1}),define_lists(OBJECT),Object.defineProperty(OBJECT,"get",{value:get,enumerable:!1}),Object.defineProperty(OBJECT,"list",{value:list,enumerable:!1})):"object"==typeof OBJECT&&!Array.isArray(OBJECT)&&!OBJECT.hasOwnProperty("get")&&OBJECT.level&&OBJECT.level.match(/^1\.\d\.\d/)?(level_1_helpers(),Object.defineProperty(OBJECT,"clone",{value:clone,enumerable:!1}),Object.defineProperty(OBJECT,"stringify",{value:stringify,enumerable:!1}),define_lists(OBJECT),Object.defineProperty(OBJECT,"get",{value:get,enumerable:!1}),Object.defineProperty(OBJECT,"list",{value:list,enumerable:!1}),Object.defineProperty(OBJECT,"put",{value:append,enumerable:!1}),Object.defineProperty(OBJECT,"level_up",{value:level_up,enumerable:!1})):"object"==typeof OBJECT&&!Array.isArray(OBJECT)&&!OBJECT.hasOwnProperty("get")&&OBJECT.level&&OBJECT.level.match(/^2\.\d\.\d/)?(level_2_helpers(),Object.defineProperty(OBJECT,"clone",{value:clone,enumerable:!1}),Object.defineProperty(OBJECT,"stringify",{value:stringify,enumerable:!1}),define_lists(OBJECT),Object.defineProperty(OBJECT,"get",{value:get,enumerable:!1}),Object.defineProperty(OBJECT,"list",{value:list,enumerable:!1}),Object.defineProperty(OBJECT,"put",{value:append,enumerable:!1}),eval_equation(OBJECT)):"object"==typeof OBJECT&&!Array.isArray(OBJECT)&&!OBJECT.hasOwnProperty("get")&&OBJECT.level&&OBJECT.level.match(/name/)&&(name_helpers(),Object.defineProperty(OBJECT,"clone",{value:clone,enumerable:!1}),Object.defineProperty(OBJECT,"stringify",{value:stringify,enumerable:!1}),define_lists(OBJECT),Object.defineProperty(OBJECT,"get",{value:get,enumerable:!1}),Object.defineProperty(OBJECT,"list",{value:list,enumerable:!1})),OBJECT}}("undefined"!=typeof module&&module.exports?module.exports:KINOME);