!function(e){"use strict";e.enrich=function(r){var t,n,s,l,o,p,i,a,u,c,y,d,h,f,g,v,O,m,P,x;return t=function(e){var r,t,n,s,l,o,p,a,u=[],c=this;for(s=(e=g(e)).peptides,o=e.exposures,l=e.cycles,r=0;r<s.length;r+=1)for(t=0;t<l.length;t+=1)for(n=0;n<o.length;n+=1)p=i[l[t]][o[n]],a=y[s[r]].index,void 0!==p&&void 0!==a&&u.push({peptide:s[r],cycle:l[t],exposure:o[n],signal:c.signal[p][a],signal_valid:c.signal_valid[p][a],background:c.background[p][a],background_valid:c.background_valid[p][a],spot_row:y[s[r]].row,spot_column:y[s[r]].col,set:h(p,a,c),more:f(p,y[s[r]])});return u},v=function(e){var r,t,n,s,l,p,i,a,u=this;if(m(e)){if(r=e.value,t=e.valid,n=e.type,s=e.peptide,p=e.cycle,l=e.exposure,l=null===l?"Cycle Slope":l,p=null===p?"Post Wash":p,1!==(a=u.get({peptide:s,cycle:p,exposure:l})).length){for(u.signal.push(O(u[n][0].length)),u.signal_valid.push(O(u[n][0].length)),u.background.push(O(u[n][0].length)),u.background_valid.push(O(u[n][0].length)),u.cycles.push("string"==typeof p?null:p),u.exposures.push("string"==typeof l?null:l),i=0;i<u.run_data.length;i+=1)Array.isArray(u.run_data.value)&&u.run_data.value.length===u.cycles.length-1&&u.run_data.value.push(void 0);o(u),a=u.get({peptide:s,cycle:p,exposure:l})}return 0===a.length&&console.log({peptide:s,cycle:p,exposure:l}),a[0].set(n,r),a[0].set(n+"_valid",t),!0}return console.error("Failed to set, one or more parameters were missing or invalid."),!1},m=function(e){var r=!1;return e&&e.hasOwnProperty("value")&&e.hasOwnProperty("valid")&&e.hasOwnProperty("type")&&e.hasOwnProperty("peptide")&&e.hasOwnProperty("cycle")&&e.hasOwnProperty("exposure")&&(e.value*=1,e.valid*=1,e.cycle=null===e.cycle?null:"Post Wash"===e.cycle?null:1*e.cycle,e.exposure=null===e.exposure?null:"Cycle Slope"===e.exposure?null:1*e.exposure,isNaN(e.value)||isNaN(e.valid)||isNaN(e.cycle)||isNaN(e.exposure)||"string"!=typeof e.type||"string"!=typeof e.peptide||y.hasOwnProperty(e.peptide)&&e.type.match(/background|signal/)&&(r=!0)),r},g=function(e){var r,t,s,l;if(e=e||{},r=e.hasOwnProperty("peptides")?e.peptides:e.hasOwnProperty("peptide")?e.peptide:c,t=e.hasOwnProperty("cycles")?e.cycles:e.hasOwnProperty("cycle")?e.cycle:void 0,s=e.hasOwnProperty("exposures")?e.exposures:e.hasOwnProperty("exposure")?e.exposure:void 0,void 0===t)for(t=n(p),l=0;l<t.length;l+=1)"Post Wash"===t[l]&&(t.splice(l,1),l-=1);if(void 0===s)for(s=n(a),l=0;l<s.length;l+=1)"Cycle Slope"===s[l]&&(s.splice(l,1),l-=1);for(r=Array.isArray(r)?r:[r],t=Array.isArray(t)?t:[t],s=Array.isArray(s)?s:[s],l=0;l<r.length;l+=1)y.hasOwnProperty(r[l])||r.splice(l,1);for(l=0;l<t.length;l+=1)i.hasOwnProperty(t[l])||t.splice(l,1);for(l=0;l<s.length;l+=1)d.hasOwnProperty(s[l])||s.splice(l,1);return{cycles:t,exposures:s,peptides:r}},h=function(e,r,t){return function(n,s){var l=this;n.match(/^(signal|background)(_valid)*$/)&&(t[n][e][r]=s,l[n]=s)}},f=function(e,r){return function(){return{peptide:n(r),image_index:e}}},s=function(e){var r;return(e=e||"").match(/peptide/i)?(r=n(c),r.more=x,r):e.match(/exposure/i)?n(a):e.match(/cycle/i)?n(p):(r={peptides:n(c),exposures:n(a),cycles:n(p)},r.peptides.more=x,r)},x=function(){var e,r=[],t=this;for(e=0;e<t.length;e+=1)r.push(y[t[e]].full);return r},o=function(e){var r,t,n,s,l,o,h,f;for(p=[],i={},a=[],d={},c=[],y={},r=0;r<e.peptides.length;r+=1){for(t=0;t<e.peptides[r].length;t+=1)"ID"===e.peptides[r][t].key&&(s=t),"spotRow"===e.peptides[r][t].key&&(l=t),"spotCol"===e.peptides[r][t].key&&(o=t);if("#REF"!==(n=e.peptides[r][s].value)){for(;y.hasOwnProperty(n);)n+="_2";c.push(n),y[n]={name:e.peptides[r][s].value,row:e.peptides[r][l].value,col:e.peptides[r][o].value,index:r,full:e.peptides[r]}}}for(r=0;r<e.cycles.length;r+=1)null===(h=e.cycles[r])&&(h="Post Wash"),null===(f=e.exposures[r])&&(f="Cycle Slope"),i[h]=i[h]||[],i[h][f]=r,d[f]=1;p=Object.keys(i).map(u),a=Object.keys(d).map(u)},O=function(e){var r,t=[];for(r=0;r<e;r+=1)t.push(void 0);return t},n=function(e){return JSON.parse(JSON.stringify(e))},l=function(){return e.enrich(n(this))},u=function(e){return e.match(/Post\ Wash|Cycle\ Slope/i)?e:1*e},P=function(){for(var e,r,t,n=this,s=[n];s.length>0;)for(r=s.shift(),e=Object.keys(r),t=0;t<e.length;t+=1)"object"==typeof r[e[t]]&&null!==r[e[t]]?s.push(r[e[t]]):r[e[t]]&&"number"==typeof r[e[t]]&&(r[e[t]]=1*r[e[t]].toPrecision(6));return JSON.stringify(n)},Array.isArray(r)?r=r.map(function(r){return e.enrich(r)}):r.hasOwnProperty("get")||r.level.match(/name/)||(o(r),Object.defineProperty(r,"get",{value:t,enumerable:!1}),Object.defineProperty(r,"list",{value:s,enumerable:!1}),Object.defineProperty(r,"clone",{value:l,enumerable:!1}),Object.defineProperty(r,"append",{value:v,enumerable:!1}),Object.defineProperty(r,"stringify",{value:P,enumerable:!1})),r}}("undefined"!=typeof module&&module.exports?module.exports:KINOME);