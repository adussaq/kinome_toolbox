!function(e){"use strict";e.enrich=function(t){var r,n,l,s,i,o,p,a,u,c,y,d,h,g,f,v,m,b,x,O,P;return g=function(){var t,o,p;r=function(e){var r,n,l,s,i,p,a,c,d=[],h=this;for(s=(e=P(e)).peptides,p=e.exposures,i=e.cycles,r=0;r<s.length;r+=1)for(n=0;n<i.length;n+=1)for(l=0;l<p.length;l+=1)a=u[i[n]][p[l]],c=y[s[r]].index,void 0!==a&&void 0!==c&&d.push({peptide:s[r],cycle:i[n],exposure:p[l],signal:h.signal[a][c],signal_valid:h.signal_valid[a][c],background:h.background[a][c],background_valid:h.background_valid[a][c],spot_row:y[s[r]].row,spot_column:y[s[r]].col,set:t(a,c,h),more:o(a,y[s[r]])});return d},o=function(e,t){return function(){return{peptide:v(t),image_index:e}}},s=function(e){var t,r,n,s,i,o,a,u,c=this;if(p(e)){if(t=e.value,r=e.valid,n=e.type,s=e.peptide,o=e.cycle,i=e.exposure,i=null===i?"Cycle Slope":i,o=null===o?"Post Wash":o,1!==(u=c.get({peptide:s,cycle:o,exposure:i})).length){for(c.signal.push(b(c[n][0].length)),c.signal_valid.push(b(c[n][0].length)),c.background.push(b(c[n][0].length)),c.background_valid.push(b(c[n][0].length)),c.cycles.push("string"==typeof o?null:o),c.exposures.push("string"==typeof i?null:i),a=0;a<c.run_data.length;a+=1)Array.isArray(c.run_data[a].value)&&c.run_data[a].value.length===c.cycles.length-1&&c.run_data[a].value.push(void 0);l(c),u=c.get({peptide:s,cycle:o,exposure:i})}return u[0].set(n,t),u[0].set(n+"_valid",r),!0}return console.error("Failed to set, one or more parameters were missing or invalid."),!1},p=function(e){var t=!1;return e&&e.hasOwnProperty("value")&&e.hasOwnProperty("valid")&&e.hasOwnProperty("type")&&e.hasOwnProperty("peptide")&&e.hasOwnProperty("cycle")&&e.hasOwnProperty("exposure")&&(e.value*=1,e.valid*=1,e.cycle=null===e.cycle?null:"Post Wash"===e.cycle?null:1*e.cycle,e.exposure=null===e.exposure?null:"Cycle Slope"===e.exposure?null:1*e.exposure,isNaN(e.value)||isNaN(e.valid)||isNaN(e.cycle)||isNaN(e.exposure)||"string"!=typeof e.type||"string"!=typeof e.peptide||y.hasOwnProperty(e.peptide)&&e.type.match(/background|signal/)&&(t=!0)),t},t=function(e,t,r){return function(n,l){var s=this;n.match(/^(signal|background)(_valid)*$/)&&(r[n][e][t]=l,s[n]=l)}},n=function(e){var t;return(e=e||"").match(/peptide/i)?(t=v(c),t.more=x,t):e.match(/exposure/i)?v(d):e.match(/cycle/i)?v(a):(t={peptides:v(c),exposures:v(d),cycles:v(a)},t.peptides.more=x,t)},l=function(e){var t,r,n;for(a=[],u={},d=[],h={},c=[],y={},O(e),t=0;t<e.cycles.length;t+=1)null===(r=e.cycles[t])&&(r="Post Wash"),null===(n=e.exposures[t])&&(n="Cycle Slope"),u[r]=u[r]||[],u[r][n]=t,h[n]=1;a=Object.keys(u).map(m),d=Object.keys(h).map(m)},i=function(t){var r,n,l,s=this;for(l=(n=JSON.parse(s.stringify())).cycles.length,delete n.cycles,delete n.exposures,delete n.background,delete n.background_valid,delete n.signal,delete n.signal_valid,"string"!=typeof t&&console.error("No equation string passed in, please pass in a string with the needed parts. Example: https://github.com/adussaq/kinome_toolbox/blob/master/models/cyclingEq_3p_hyperbolic.jseq"),n.linear={signal:[],background:[],cycles:[]},n.kinetic={signal:[],background:[],exposures:[],equation_string:t},n.level=n.level.replace(/^1/,"2"),console.log("delete this part once updated the data struct"),r=0;r<n.run_data.length;r+=1)if(n.run_data[r].key.match(/^cycle$/i)){l=n.run_data[r].value.length;break}for(r=0;r<n.run_data.length;r+=1)n.run_data[r].value.length===l&&(n.run_data.splice(r,1),r-=1);for(r=0;r<n.sample_data.length;r+=1)n.sample_data[r].value.length===l&&(n.sample_data.splice(r,1),r-=1);return e.enrich(n)}},f=function(){var e,t,i,o=["kinetic","linear"];s=function(e){var r,n,s,i,o,p,a,u=this;return t(e)?(r=e.value,n=e.peptide,i=e.cycle,s=e.exposure,p=e.type,a=e.signal_type,1!==(o=u.get({peptide:n,type:p,cycle:i,exposure:s})).length&&("kinetic"===p?(u.kinetic.signal.push(b(u.peptides.length)),u.kinetic.background.push(b(u.peptides.length)),u.kinetic.exposures.push("string"==typeof s?null:s)):"linear"===p&&(u.linear.signal.push(b(u.peptides.length)),u.linear.background.push(b(u.peptides.length)),u.linear.cycles.push("string"==typeof i?null:i)),l(u),o=u.get({peptide:n,type:p,cycle:i,exposure:s})),o[0].set(a,r),!0):(console.error("Failed to set, one or more parameters were missing or invalid."),!1)},e=function(e,t,r,n){return function(l,s){var i=this;"string"==typeof l&&(l=l.toLowerCase()).match(/^signal$|^background$/)?(n[e][l][t][r]=s,i[l]=s):console.error("failed to set, key invalid")}},i=function(e,t){return function(){return{peptide:v(t),fit_index:e}}},r=function(t){var r,n,l,s,p,a,c,d,g,f,m,b,x,O,k=this,w={},_=[];for(r=(t=P(t)).peptides,l=t.exposures,n=t.cycles,"string"==typeof(s=t.hasOwnProperty("type")?t.type:t.hasOwnProperty("types")?t.types:o)&&s.match(/kinetic|linear/i)?s=[s.toLowerCase()]:Array.isArray(s)&&s.map(function(e,t){return s[t]=s[t].toLowerCase(),e.match(/kinetic|linear/)?1:0}).reduce(function(e,t){return e*t})||(s=o),p=0;p<s.length;p+=1)for("kinetic"===s[p]?(d=l,f=h,g="exposure",m="cycle",b=n):(d=n,f=u,g="cycle",m="exposure",b=l),a=0;a<d.length;a+=1)for(c=0;c<r.length;c+=1)x=f[d[a]],O=y[r[c]].index,(w={peptide:r[c],type:s[p],signal:k[s[p]].signal[x][O],background:k[s[p]].background[x][O],spot_row:y[r[c]].row,spot_column:y[r[c]].col,set:e(s[p],x,O,k),more:i(x,y[r[c]])})[g]=d[a],w[m]=v(b),_.push(w);return _},l=function(e){var t,r,n;for(a=[],u={},d=[],h={},c=[],y={},O(e),t=0;t<e.linear.cycles.length;t+=1)null===(r=e.linear.cycles[t])&&(r="Post Wash"),u[r]=t;for(t=0;t<e.kinetic.exposures.length;t+=1)null===(n=e.kinetic.exposures[t])&&(n="Cycle Slope"),h[n]=t;a=Object.keys(u).map(m),d=Object.keys(h).map(m)},t=function(e){var t,r,n=!1;return e=e||{},e.exposure=null===e.exposure?"Cycle Slope":e.exposure,e.cycle=null===e.cycle?"Post Wash":e.cycle,e.hasOwnProperty("signal")&&!e.hasOwnProperty("background")?(t=e.signal,r="signal"):!e.hasOwnProperty("signal")&&e.hasOwnProperty("background")&&(t=e.background,r="background"),r&&"string"==typeof e.type&&e.type.match(/^linear$|^kinetic$/)&&"string"==typeof e.peptide&&y.hasOwnProperty(e.peptide)&&("linear"!==e.type||"number"!=typeof e.cycle&&"Post Wash"!==e.cycle?"number"!=typeof e.exposure&&"Cycle Slope"!==e.exposure||(n=!0):n=!0),e.signal_type=r,e.value=t,n},n=function(e){var t;return(e=e||"").match(/peptide/i)?(t=v(c),t.more=x,t):e.match(/exposure/i)?v(d):e.match(/cycle/i)?v(a):e.match(/type/i)?v(o):(t={peptides:v(c),exposures:v(d),cycles:v(a),types:v(o)},t.peptides.more=x,t)}},x=function(){var e,t=[],r=this;for(e=0;e<r.length;e+=1)t.push(y[r[e]].full);return t},P=function(e){var t,r,n,l,s;if(e=e||{},t=e.hasOwnProperty("peptides")?e.peptides:e.hasOwnProperty("peptide")?e.peptide:c,r=e.hasOwnProperty("cycles")?e.cycles:e.hasOwnProperty("cycle")?e.cycle:void 0,n=e.hasOwnProperty("exposures")?e.exposures:e.hasOwnProperty("exposure")?e.exposure:void 0,void 0===r)for(r=v(a),l=0;l<r.length;l+=1)"Post Wash"===r[l]&&(r.splice(l,1),l-=1);if(void 0===n)for(n=v(d),l=0;l<n.length;l+=1)"Cycle Slope"===n[l]&&(n.splice(l,1),l-=1);for(t=Array.isArray(t)?t:[t],r=Array.isArray(r)?r:[r],n=Array.isArray(n)?n:[n],l=0;l<t.length;l+=1)y.hasOwnProperty(t[l])||t.splice(l,1);for(l=0;l<r.length;l+=1)u.hasOwnProperty(r[l])||r.splice(l,1);for(l=0;l<n.length;l+=1)h.hasOwnProperty(n[l])||n.splice(l,1);return s=v(e),s.cycles=r,s.exposures=n,s.peptides=t,delete s.cycle,delete s.exposure,delete s.peptide,s},b=function(e){var t,r=[];for(t=0;t<e;t+=1)r.push(void 0);return r},O=function(e){var t,r,n,l,s,i;for(t=0;t<e.peptides.length;t+=1){for(r=0;r<e.peptides[t].length;r+=1)"ID"===e.peptides[t][r].key&&(l=r),"spotRow"===e.peptides[t][r].key&&(n=r),"spotCol"===e.peptides[t][r].key&&(s=r);if("#REF"!==(i=e.peptides[t][l].value)){for(;y.hasOwnProperty(i);)i+="_2";c.push(i),y[i]={name:e.peptides[t][l].value,row:e.peptides[t][n].value,col:e.peptides[t][s].value,index:t,full:e.peptides[t]}}}},v=function(e){return JSON.parse(JSON.stringify(e))},o=function(){return e.enrich(v(this))},m=function(e){return e.match(/Post\ Wash|Cycle\ Slope/i)?e:1*e},p=function(){for(var e,t,r,n=this,l=[n];l.length>0;)for(t=l.shift(),e=Object.keys(t),r=0;r<e.length;r+=1)"object"==typeof t[e[r]]&&null!==t[e[r]]?l.push(t[e[r]]):t[e[r]]&&"number"==typeof t[e[r]]&&(t[e[r]]=1*t[e[r]].toPrecision(6));return JSON.stringify(n)},Array.isArray(t)?t=t.map(function(t){return e.enrich(t)}):!t.hasOwnProperty("get")&&t.level.match(/^1\.\d\.\d/)?(g(),Object.defineProperty(t,"clone",{value:o,enumerable:!1}),Object.defineProperty(t,"stringify",{value:p,enumerable:!1}),l(t),Object.defineProperty(t,"get",{value:r,enumerable:!1}),Object.defineProperty(t,"list",{value:n,enumerable:!1}),Object.defineProperty(t,"put",{value:s,enumerable:!1}),Object.defineProperty(t,"level_up",{value:i,enumerable:!1})):!t.hasOwnProperty("get")&&t.level.match(/^2\.\d\.\d/)&&(f(),Object.defineProperty(t,"clone",{value:o,enumerable:!1}),Object.defineProperty(t,"stringify",{value:p,enumerable:!1}),l(t),Object.defineProperty(t,"get",{value:r,enumerable:!1}),Object.defineProperty(t,"list",{value:n,enumerable:!1}),Object.defineProperty(t,"put",{value:s,enumerable:!1})),t}}("undefined"!=typeof module&&module.exports?module.exports:KINOME);