!function(t){"use strict";var e,n,o;o=function(t,e,n){var o=0,i={x:[],y:[],valid:[],equation:{string:n}},a={x:[],y:[],valid:[],equation:{string:n}};for(o=0;o<t.length;o+=1)a.x.push(t[o][e]),a.y.push(t[o].signal),a.valid.push(t[o].signal_valid),i.x.push(t[o][e]),i.y.push(t[o].background),i.valid.push(t[o].background_valid);return{signal:a,background:i}},n=function(t,e,n){return function(i){if(!i.get||"function"!=typeof i.get)throw"Data object does not have get function attached. Use get_kinome.js to add this on.";var a,r,u,d,p,l,s,c,g,h,f=[];for(p=i.level_up(e),c=function(t){var e;return n.done+=1,e={peptide:t[0].peptide,cycle:t[0].cycle,type:"linear"},e[t[0].type]={R2:t[1].R2,parameters:t[1].parameters},p.put(e),!0},s=function(t){var e;return n.done+=1,e={peptide:t[0].peptide,exposure:t[0].exposure,type:"kinetic"},e[t[0].type]={R2:t[1].R2,parameters:t[1].parameters,WW:t[1].WWtest[0]},p.put(e),!0},a=i.list("cycle"),l=i.list("exposure"),r=i.list("peptides"),g=0;g<r.length;g+=1){for(h=0;h<a.length;h+=1)(u=i.get({peptide:r[g],cycle:a[h]})).length>1&&(d=o(u,"exposure","linear"),n.total+=2,f.push(t.submit({model:d.signal,origin:{peptide:r[g],cycle:a[h],type:"signal"}}).then(c)),f.push(t.submit({model:d.background,origin:{peptide:r[g],cycle:a[h],type:"background"}}).then(c)));for(h=0;h<l.length;h+=1)(u=i.get({peptide:r[g],exposure:l[h]})).length>1&&(d=o(u,"cycle",e),n.total+=2,f.push(t.submit({model:d.signal,origin:{peptide:r[g],exposure:l[h],type:"signal"}}).then(s)),f.push(t.submit({model:d.background,origin:{peptide:r[g],exposure:l[h],type:"background"}}).then(s)))}return Promise.all(f).then(function(){return p}).catch(function(t){console.log("something failed...",t)})}},e=function(t){return new Promise(function(e,o){t.data&&"object"==typeof t.data||o("Data object not added in. This will not work without it."),t.amd_ww&&"object"==typeof t.amd_ww||o("AMD_WW object not added in. This will not work without it."),t.equation&&"string"==typeof t.equation||o("Equation string not added in. This will not work without it."),t.worker&&"string"==typeof t.worker||o("String for worker url not added in. This will not work without it."),Array.isArray(t.data)||(t.data=[t.data]);var i,a,r={done:0,total:0};a=t.number_threads||void 0,i=t.amd_ww.start({filename:t.worker,num_workers:a}),console.log("\nStarting fits for level 2 data.\n"),Promise.all(t.data.map(n(i,t.equation,r))).catch(function(t){o("Fitting failed"+t)}).then(function(t){r.done=r.total,e(t)}),t.hasOwnProperty("update")&&"function"==typeof t.update&&t.update(r)})},t.parameterize=e}("undefined"!=typeof module&&module.exports?module.exports:KINOME);