!function(exports){"use strict";exports.enrich=function(OBJECT){var get,list,define_lists,append,level_up,eval_equation,clone,stringify,ID="_id",cycle_list,cycle_object,peptide_list,peptide_object,exposure_list,exposure_object,level_1_helpers,level_2_helpers,copy,mult1,blank_array,ret_full_pep_list,define_peptide_list,verify_get_input,array_level_helpers,name_helpers,addSuperMeta;return level_1_helpers=function(){var e,t,r,i;get=function(i){var l,s,n,o,p,c,a,u,y=[];for(o=(i=verify_get_input(i)).peptides,c=i.exposures,p=i.cycles,l=0;l<o.length;l+=1)for(s=0;s<p.length;s+=1)for(n=0;n<c.length;n+=1)a=cycle_object[p[s]][c[n]],u=peptide_object[o[l]].index,void 0!==a&&void 0!==u&&y.push(addSuperMeta({peptide:o[l],cycle:p[s],exposure:c[n],signal:this.signal[a][u],signal_valid:this.signal_valid[a][u],background:this.background[a][u],background_valid:this.background_valid[a][u],spot_row:1*peptide_object[o[l]].row,spot_col:1*peptide_object[o[l]].col,image:r(a,this),set:e(a,u,this),more:t(a,peptide_object[o[l]])},this));return y},t=function(e,t){return function(){return{peptide:copy(t),image_index:e}}},r=function(e,t){var r;for(r=0;r<t.run_data.length;r+=1)if(t.run_data[r].key.match(/^image$/i))return t.run_data[r].value[e]},append=function(e){var t,r,l,s,n,o,p,c;if(i(e)){if(t=e.value,r=e.valid,l=e.type,s=e.peptide,o=e.cycle,n=e.exposure,n=null===n?"Cycle Slope":n,o=null===o?"Post Wash":o,1!==(c=this.get({peptide:s,cycle:o,exposure:n})).length){for(this.signal.push(blank_array(this[l][0].length)),this.signal_valid.push(blank_array(this[l][0].length)),this.background.push(blank_array(this[l][0].length)),this.background_valid.push(blank_array(this[l][0].length)),this.cycles.push("string"==typeof o?null:o),this.exposures.push("string"==typeof n?null:n),p=0;p<this.run_data.length;p+=1)Array.isArray(this.run_data[p].value)&&this.run_data[p].value.length===this.cycles.length-1&&this.run_data[p].value.push(void 0);define_lists(this),c=this.get({peptide:s,cycle:o,exposure:n})}return c[0].set(l,t),c[0].set(l+"_valid",r),!0}return console.error("Failed to set, one or more parameters were missing or invalid."),!1},i=function(e){var t=!1;return e&&e.hasOwnProperty("value")&&e.hasOwnProperty("valid")&&e.hasOwnProperty("type")&&e.hasOwnProperty("peptide")&&e.hasOwnProperty("cycle")&&e.hasOwnProperty("exposure")&&(e.value*=1,e.valid*=1,e.cycle=null===e.cycle?null:"Post Wash"===e.cycle?null:1*e.cycle,e.exposure=null===e.exposure?null:"Cycle Slope"===e.exposure?null:1*e.exposure,Number.isNaN(e.value)||Number.isNaN(e.valid)||Number.isNaN(e.cycle)||Number.isNaN(e.exposure)||"string"!=typeof e.type||"string"!=typeof e.peptide||peptide_object.hasOwnProperty(e.peptide)&&e.type.match(/background|signal/)&&(t=!0)),t},e=function(e,t,r){return function(i,l){i.match(/^(signal|background)(_valid)*$/)&&(r[i][e][t]=l,this[i]=l)}},list=function(e){var t;return"string"!=typeof(e=e||"")&&(e="",console.warn("list should only be passed a string")),e.match(/peptide/i)?(t=copy(peptide_list),t.more=ret_full_pep_list,t):e.match(/exposure/i)?copy(exposure_list):e.match(/cycle/i)?copy(cycle_list):(t={peptides:copy(peptide_list),exposures:copy(exposure_list),cycles:copy(cycle_list)},t.peptides.more=ret_full_pep_list,t)},define_lists=function(e){var t,r,i;for(cycle_list=[],cycle_object={},exposure_list=[],exposure_object={},peptide_list=[],peptide_object={},define_peptide_list(e),t=0;t<e.cycles.length;t+=1)null===(r=e.cycles[t])&&(r="Post Wash"),null===(i=e.exposures[t])&&(i="Cycle Slope"),cycle_object[r]=cycle_object[r]||[],cycle_object[r][i]=t,exposure_object[i]=1;cycle_list=Object.keys(cycle_object).map(mult1),exposure_list=Object.keys(exposure_object).map(mult1)},level_up=function(e){var t,r,i;for(i=(r=JSON.parse(this.stringify())).cycles.length,delete r.cycles,delete r.exposures,delete r.background,delete r.background_valid,delete r.signal,delete r.signal_valid,"string"!=typeof e&&console.error("No equation string passed in, please pass in a string with the needed parts. Example: https://github.com/adussaq/kinome_toolbox/blob/master/models/cyclingEq_3p_hyperbolic.jseq"),r.linear={signal:[],background:[],cycles:[]},r.kinetic={signal:[],background:[],exposures:[],equation_string:e},r.level=r.level.replace(/^1/,"2"),t=0;t<r.run_data.length;t+=1)r.run_data[t].value.length===i&&(r.run_data.splice(t,1),t-=1);for(t=0;t<r.sample_data.length;t+=1)r.sample_data[t].value.length===i&&(r.sample_data.splice(t,1),t-=1);return exports.enrich(r)}},level_2_helpers=function(){var set_function,check_apppend_params,more_function,type_list=["kinetic","linear"];append=function(e){var t,r,i,l,s,n,o;return check_apppend_params(e)?(t=e.value,r=e.peptide,l=e.cycle,i=e.exposure,n=e.type,o=e.signal_type,1!==(s=this.get({peptide:r,type:n,cycle:l,exposure:i})).length&&("kinetic"===n?(this.kinetic.signal.push(blank_array(this.peptides.length)),this.kinetic.background.push(blank_array(this.peptides.length)),this.kinetic.exposures.push("string"==typeof i?null:i)):"linear"===n&&(this.linear.signal.push(blank_array(this.peptides.length)),this.linear.background.push(blank_array(this.peptides.length)),this.linear.cycles.push("string"==typeof l?null:l)),define_lists(this),s=this.get({peptide:r,type:n,cycle:l,exposure:i})),s[0].set(o,t),!0):(console.error("Failed to set, one or more parameters were missing or invalid."),!1)},set_function=function(e,t,r,i){return function(l,s){"string"==typeof l&&(l=l.toLowerCase()).match(/^signal$|^background$/m)?(i[e][l][t][r]=s,this[l]=s):console.error("failed to set, key invalid")}},more_function=function(e,t){return function(){return{peptide:copy(t),fit_index:e}}},get=function(e){var t,r,i,l,s,n,o,p,c,a,u,y,d,_,h={},f=[];for(t=(e=verify_get_input(e)).peptides,i=e.exposures,r=e.cycles,"string"==typeof(l=e.hasOwnProperty("type")?e.type:e.hasOwnProperty("types")?e.types:type_list)&&l.match(/kinetic|linear/i)?l=[l.toLowerCase()]:Array.isArray(l)&&l.map(function(e,t){return l[t]=l[t].toLowerCase(),e.match(/kinetic|linear/)?1:0}).reduce(function(e,t){return e*t})||(l=type_list),s=0;s<l.length;s+=1)for("kinetic"===l[s]?(p=i,a=exposure_object,c="exposure",u="cycle",y=r):(p=r,a=cycle_object,c="cycle",u="exposure",y=i),n=0;n<p.length;n+=1)for(o=0;o<t.length;o+=1)d=a[p[n]],_=peptide_object[t[o]].index,(h={peptide:t[o],type:l[s],signal:this[l[s]].signal[d][_],background:this[l[s]].background[d][_],spot_row:1*peptide_object[t[o]].row,spot_col:1*peptide_object[t[o]].col,equation:this[l[s]].equation,set:set_function(l[s],d,_,this),more:more_function(d,peptide_object[t[o]])})[c]=p[n],h[u]=copy(y),h=addSuperMeta(h,this),f.push(h);return f},define_lists=function(e){var t,r,i;for(cycle_list=[],cycle_object={},exposure_list=[],exposure_object={},peptide_list=[],peptide_object={},define_peptide_list(e),t=0;t<e.linear.cycles.length;t+=1)null===(r=e.linear.cycles[t])&&(r="Post Wash"),cycle_object[r]=t;for(t=0;t<e.kinetic.exposures.length;t+=1)null===(i=e.kinetic.exposures[t])&&(i="Cycle Slope"),exposure_object[i]=t;cycle_list=Object.keys(cycle_object).map(mult1),exposure_list=Object.keys(exposure_object).map(mult1)},check_apppend_params=function(e){var t,r,i=!1;return e=e||{},e.exposure=null===e.exposure?"Cycle Slope":e.exposure,e.cycle=null===e.cycle?"Post Wash":e.cycle,e.hasOwnProperty("signal")&&!e.hasOwnProperty("background")?(t=e.signal,r="signal"):!e.hasOwnProperty("signal")&&e.hasOwnProperty("background")&&(t=e.background,r="background"),r&&"string"==typeof e.type&&e.type.match(/^linear$|^kinetic$/m)&&"string"==typeof e.peptide&&peptide_object.hasOwnProperty(e.peptide)&&("linear"!==e.type||"number"!=typeof e.cycle&&"Post Wash"!==e.cycle?"number"!=typeof e.exposure&&"Cycle Slope"!==e.exposure||(i=!0):i=!0),e.signal_type=r,e.value=t,i},eval_equation=function(obj){var nl_equation={};return eval("nl_equation = "+obj.kinetic.equation_string),obj.kinetic.equation=nl_equation,obj.linear.equation={description:"For fitting linear data",displayEq:function(e){return"y(e)="+e[0].toFixed(2)+"·e+"+e[1].toFixed(2)},func:function(e,t){return e[0]*t[0]+t[1]},mathParams:["m","b"],mathType:"y(e)=m·e+b",name:"linear",stringified:"y(e) = m · e + b"},obj},list=function(e){var t;return"string"!=typeof(e=e||"")&&(e="",console.warn("list should only be passed a string")),e.match(/peptide/i)?(t=copy(peptide_list),t.more=ret_full_pep_list,t):e.match(/exposure/i)?copy(exposure_list):e.match(/cycle/i)?copy(cycle_list):e.match(/type/i)?copy(type_list):(t={peptides:copy(peptide_list),exposures:copy(exposure_list),cycles:copy(cycle_list),types:copy(type_list)},t.peptides.more=ret_full_pep_list,t)}},addSuperMeta=function(e,t){var r;return void 0!==t.group&&(e.group=t.group),t.level.match(/^2/)&&"object"==typeof location&&location.href&&(r=t.data_origin_url)&&(r=(r=r.replace(/\/*\?[\s\S]*$/,"").replace(/\/lvl_2/,"/lvl_1"))+'?find={"name_id":"'+t.name_id+'"}',r="./?data=*["+encodeURIComponent(r)+"]*",e.lvl_1=r),e.name=t.name,e.level=t.level,e},array_level_helpers=function(){var e,t,r;r=function(e,t){var r,i={};for(r=0;r<e.length;r+=1)i[e[r]]=1;for(r=0;r<t.length;r+=1)i[t[r]]=1;return Object.keys(i)},define_lists=function(e){var i,l,s,n={},o={},p={},c={};t={},e.map(function(e){for(l=e.list(),s=Object.keys(l),i=0;i<s.length;i+=1)t.hasOwnProperty(s[i])?r(t[s[i]],l[s[i]]):t[s[i]]=l[s[i]];n[e.group]=1,o[e.name]=1,p[e.name_id]=1,c[e.level]=1}),t.cycles=t.cycles.map(mult1),t.exposures=t.exposures.map(mult1),t.groups=Object.keys(n).map(mult1),t.names=Object.keys(o),t.ids=Object.keys(p),t.levels=Object.keys(c)},get=function(t){var r,i=[];for(t=e(t),r=0;r<this.length;r+=1)this[r].name.match(t.names)&&this[r].group.toString().match(t.groups)&&this[r].level.match(t.levels)&&this[r].name_id.match(t.ids)&&(i=t.get_samples?i.concat(this[r]):i.concat(this[r].get(t)));return i},list=function(e){"string"!=typeof(e=e||"")&&(e="",console.warn("list should only be passed a string"));var r,i=Object.keys(t);for(r=0;r<i.length;r+=1)if(e.match(new RegExp("^"+i[r].replace(/^\^/,""),"i"))||i[r].match(new RegExp(e,"i")))return copy(t[i[r]]);return copy(t)},e=function(e){var r,i,l,s,n;return e=e||{},r=e.hasOwnProperty("groups")?e.groups:e.hasOwnProperty("group")?e.group:t.groups,Array.isArray(r)||(r=[r]),r=new RegExp("^"+r.join("$|^")+"$","i"),i=e.hasOwnProperty("names")?e.names:e.hasOwnProperty("name")?e.name:t.names,Array.isArray(i)||(i=[i]),i=new RegExp("^"+i.join("$|^")+"$","i"),l=e.hasOwnProperty("ids")?e.ids:e.hasOwnProperty("id")?e.id:t.ids,Array.isArray(l)||(l=[l]),l=new RegExp("^"+l.join("$|^")+"$","i"),s=e.hasOwnProperty("levels")?e.levels:e.hasOwnProperty("level")?e.level:t.levels,Array.isArray(s)||(s=[s]),s=new RegExp("^"+s.join("$|^")+"$","i"),n=copy(e),delete n.level,delete n.group,delete n.id,delete n.name,n.levels=s,n.groups=r,n.ids=l,n.names=i,n}},name_helpers=function(){var e;get=function(t){var r,i,l,s,n,o,p,c,a=[];for(s=(t=verify_get_input(t)).peptides,o=t.exposures,n=t.cycles,r=0;r<s.length;r+=1)for(i=0;i<n.length;i+=1)for(l=0;l<o.length;l+=1)p=cycle_object[n[i]][o[l]],c=peptide_object[s[r]].index,void 0!==p&&void 0!==c&&a.push({peptide:s[r],cycle:n[i],exposure:o[l],spot_row:1*peptide_object[s[r]].row,spot_col:1*peptide_object[s[r]].col,image:e(p,this)});return a},e=function(e,t){var r;for(r=0;r<t.run_data.length;r+=1)if(t.run_data[r].key.match(/image/i))return t.run_data[r].value[e]},list=function(e){var t;return"string"!=typeof(e=e||"")&&(e="",console.warn("list should only be passed a string")),e.match(/peptide/i)?(t=copy(peptide_list),t.more=ret_full_pep_list,t):e.match(/exposure/i)?copy(exposure_list):e.match(/cycle/i)?copy(cycle_list):(t={peptides:copy(peptide_list),exposures:copy(exposure_list),cycles:copy(cycle_list)},t.peptides.more=ret_full_pep_list,t)},define_lists=function(e){var t,r,i;for(cycle_list=[],cycle_object={},exposure_list=[],exposure_object={},peptide_list=[],peptide_object={},define_peptide_list(e),t=0;t<e.cycles.length;t+=1)null===(r=e.cycles[t])&&(r="Post Wash"),null===(i=e.exposures[t])&&(i="Cycle Slope"),cycle_object[r]=cycle_object[r]||[],cycle_object[r][i]=t,exposure_object[i]=1;cycle_list=Object.keys(cycle_object).map(mult1),exposure_list=Object.keys(exposure_object).map(mult1)}},ret_full_pep_list=function(){var e,t,r,i,l,s,n=[];for(e=0;e<this.length;e+=1){for(s=0,r=copy(peptide_object[this[e]].full),t=0;s<2&&t<r.length;t+=1)r[t].key.match(/spotRow/i)?(i=parseInt(r[t].value,10),s+=1):r[t].key.match(/spotCol/i)&&(l=parseInt(r[t].value,10),s+=1);Object.defineProperty(r,"pos",{value:{spot_row:i,spot_col:l},enumerable:!1}),Object.defineProperty(r,"name",{value:this[e],enumerable:!1}),n.push(r)}return n},verify_get_input=function(e){var t,r,i,l,s;if(e=e||{},t=e.hasOwnProperty("peptides")?e.peptides:e.hasOwnProperty("peptide")?e.peptide:peptide_list,r=e.hasOwnProperty("cycles")?e.cycles:e.hasOwnProperty("cycle")?e.cycle:void 0,i=e.hasOwnProperty("exposures")?e.exposures:e.hasOwnProperty("exposure")?e.exposure:void 0,void 0===r)for(r=copy(cycle_list),l=0;l<r.length;l+=1)"Post Wash"===r[l]&&(r.splice(l,1),l-=1);if(void 0===i)for(i=copy(exposure_list),l=0;l<i.length;l+=1)"Cycle Slope"===i[l]&&(i.splice(l,1),l-=1);for(t=Array.isArray(t)?t:[t],r=Array.isArray(r)?r:[r],i=Array.isArray(i)?i:[i],l=0;l<t.length;l+=1)peptide_object.hasOwnProperty(t[l])||t.splice(l,1);for(l=0;l<r.length;l+=1)cycle_object.hasOwnProperty(r[l])||r.splice(l,1);for(l=0;l<i.length;l+=1)exposure_object.hasOwnProperty(i[l])||i.splice(l,1);return s=copy(e),s.cycles=r,s.exposures=i,s.peptides=t,delete s.cycle,delete s.exposure,delete s.peptide,s},blank_array=function(e){var t,r=[];for(t=0;t<e;t+=1)r.push(void 0);return r},define_peptide_list=function(e){var t,r,i,l,s,n;for(t=0;t<e.peptides.length;t+=1){for(r=0;r<e.peptides[t].length;r+=1)"ID"===e.peptides[t][r].key&&(l=r),"spotRow"===e.peptides[t][r].key&&(i=r),"spotCol"===e.peptides[t][r].key&&(s=r);if("#REF"!==(n=e.peptides[t][l].value)){for(;peptide_object.hasOwnProperty(n);)n+="_2";peptide_list.push(n),peptide_object[n]={name:e.peptides[t][l].value,row:e.peptides[t][i].value,col:e.peptides[t][s].value,index:t,full:e.peptides[t]}}}},copy=function(e){var t,r,i;if("object"!=typeof e||null===e)return e;if(e instanceof Array){for(i=e.length,t=[],r=0;r<i;r+=1)t[r]=copy(e[r]);return t}t={};for(r in e)e.hasOwnProperty(r)&&(t[r]=copy(e[r]));return t},clone=function(){var e,t,r,i,l;for(e=copy(this),t=Object.getOwnPropertyNames(this),r=Object.getOwnPropertyNames(e),i=0;i<t.length;i+=1)for(l=0;l<r.length;l+=1)if(t[i]===r[l]){t.splice(i,1),r.splice(l,1),i-=1;break}for(i=0;i<t.length;i+=1)"function"!=typeof this[t[i]]&&Object.defineProperty(e,t[i],{enumerable:!1,configurable:!1,writable:!1,value:this[t[i]]});return exports.enrich(e)},mult1=function(e){return"string"==typeof e&&e.match(/Post\sWash|Cycle\sSlope/i)?e:1*e},stringify=function(){for(var e,t,r,i=this.clone(),l=[i];l.length>0;)for(t=l.shift(),e=Object.keys(t),r=0;r<e.length;r+=1)"object"==typeof t[e[r]]&&null!==t[e[r]]?l.push(t[e[r]]):t[e[r]]&&"number"==typeof t[e[r]]&&(t[e[r]]=1*t[e[r]].toPrecision(6));return JSON.stringify(i)},Array.isArray(OBJECT)&&OBJECT.length>0?(OBJECT=OBJECT.map(function(e){return exports.enrich(e)}),array_level_helpers(),Object.defineProperty(OBJECT,"clone",{value:clone,enumerable:!1}),Object.defineProperty(OBJECT,"stringify",{value:stringify,enumerable:!1}),define_lists(OBJECT),Object.defineProperty(OBJECT,"get",{value:get,enumerable:!1}),Object.defineProperty(OBJECT,"list",{value:list,enumerable:!1})):"object"==typeof OBJECT&&!Array.isArray(OBJECT)&&!OBJECT.hasOwnProperty("get")&&OBJECT.level&&OBJECT.level.match(/^1\.\d\.\d/)?(level_1_helpers(),Object.defineProperty(OBJECT,"clone",{value:clone,enumerable:!1}),Object.defineProperty(OBJECT,"stringify",{value:stringify,enumerable:!1}),define_lists(OBJECT),Object.defineProperty(OBJECT,"get",{value:get,enumerable:!1}),Object.defineProperty(OBJECT,"list",{value:list,enumerable:!1}),Object.defineProperty(OBJECT,"put",{value:append,enumerable:!1}),Object.defineProperty(OBJECT,"level_up",{value:level_up,enumerable:!1})):"object"==typeof OBJECT&&!Array.isArray(OBJECT)&&!OBJECT.hasOwnProperty("get")&&OBJECT.level&&OBJECT.level.match(/^2\.\d\.\d/)?(level_2_helpers(),Object.defineProperty(OBJECT,"clone",{value:clone,enumerable:!1}),Object.defineProperty(OBJECT,"stringify",{value:stringify,enumerable:!1}),define_lists(OBJECT),Object.defineProperty(OBJECT,"get",{value:get,enumerable:!1}),Object.defineProperty(OBJECT,"list",{value:list,enumerable:!1}),Object.defineProperty(OBJECT,"put",{value:append,enumerable:!1}),eval_equation(OBJECT)):"object"==typeof OBJECT&&!Array.isArray(OBJECT)&&!OBJECT.hasOwnProperty("get")&&OBJECT.level&&OBJECT.level.match(/name/)&&(name_helpers(),Object.defineProperty(OBJECT,"clone",{value:clone,enumerable:!1}),Object.defineProperty(OBJECT,"stringify",{value:stringify,enumerable:!1}),define_lists(OBJECT),Object.defineProperty(OBJECT,"get",{value:get,enumerable:!1}),Object.defineProperty(OBJECT,"list",{value:list,enumerable:!1})),OBJECT}}("undefined"!=typeof module&&module.exports?module.exports:KINOME);