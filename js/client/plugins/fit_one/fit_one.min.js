!function(exports){"use strict";var get_models,eq_string,worker,fitCurvesWorker,equationURL,amd_ww2,requires;if(fitCurvesWorker="./js/lib/fitCurvesWorker.min.js",equationURL="./models/cyclingEq_3p_hyperbolic.jseq","undefined"!=typeof module&&module.exports){amd_ww2=require("amd_ww").amd_ww;var fs=require("fs");requires=new Promise(function(e,r){fs.readFile(equationURL,"utf8",function(i,o){i&&r("failed to get equation"),e([o])})})}else requires=[require(equationURL,"text"),require("amd_ww")],requires=Promise.all(requires);get_models=function(e,r,i){var o=0,t={x:[],y:[],valid:[],equation:{string:i}},a={x:[],y:[],valid:[],equation:{string:i}};for(o=0;o<e.length;o+=1)a.x.push(e[o][r]),a.y.push(e[o].signal),a.valid.push(e[o].signal_valid),t.x.push(e[o][r]),t.y.push(e[o].background),t.valid.push(e[o].background_valid);return{signal:a,background:t}},requires.then(function(e){"undefined"!=typeof window&&window.amd_ww&&(amd_ww2=window.amd_ww),eq_string=e[0].replace(/\/\/[^\n]*/g,"").replace(/\s+/g," "),worker=amd_ww2.start({filename:fitCurvesWorker,num_workers:4})}).catch(function(e){console.error(e)}),exports.fit=function(dataArr,type,backvsig,passback){return new Promise(function(resolve,reject){var short=!1;"string"!=typeof type||"linear"!==type&&"kinetic"!==type?reject("You must pass in a type of either linear or kinetic"):((!Array.isArray(dataArr)||dataArr.length<2)&&(short=!0),requires.then(function(){var model,p1,p2,outObj={};if("kinetic"===type?(model=get_models(dataArr,"cycle",eq_string),eval("outObj.equation ="+eq_string)):(model=get_models(dataArr,"exposure","linear"),outObj.equation={description:"For fitting linear data",displayEq:function(e){return"y(e)="+e[0].toFixed(2)+"·e+"+e[1].toFixed(2)},func:function(e,r){return e[0]*r[0]+r[1]},mathParams:["m","b"],mathType:"y(e)=m·e+b",name:"linear",stringified:"y(e) = m · e + b"}),short)return outObj.signal={R2:NaN,parameters:outObj.equation.mathParams.map(function(){return NaN})},outObj.background={R2:NaN,parameters:outObj.equation.mathParams.map(function(){return NaN})},void resolve(outObj);void 0!==backvsig&&"signal"===backvsig?(p1=worker.submit({model:model.signal,origin:{type:"signal"}}),p2=Promise.resolve()):void 0!==backvsig&&"background"===backvsig?(p1=Promise.resolve(),p2=worker.submit({model:model.background,origin:{type:"background"}})):(p1=worker.submit({model:model.signal,origin:{type:"signal"}}),p2=worker.submit({model:model.background,origin:{type:"background"}})),Promise.all([p1,p2]).then(function(e){Array.isArray(e[0])&&(outObj.signal=e[0][1]),Array.isArray(e[1])&&(outObj.background=e[1][1]),outObj.passback=passback,resolve(outObj)})}))}).catch(function(e){console.error(e)})}}("undefined"!=typeof module&&module.exports?module.exports:KINOME);